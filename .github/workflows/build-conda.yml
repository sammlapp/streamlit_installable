name: Build Conda Installers

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['windows-latest', 'ubuntu-latest', 'macos-latest']
        app: ['audioclipreviewer'] # 'bmzinferencegui']

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        python-version: 3.11
        activate-environment: build-env
        environment-file: constructor/AudioClipReviewer/environment.yml
        miniconda-version: latest

    - name: Install constructor
      shell: bash -l {0}
      run: |
        conda install -c anaconda constructor

    - name: Build installer - AudioClipReviewer
      if: matrix.app == 'audioclipreviewer'
      shell: bash -l {0}
      run: |
        constructor constructor/AudioClipReviewer/

    - name: Build installer - BMZInferenceGUI
      if: matrix.app == 'bmzinferencegui'
      shell: bash -l {0}
      run: |
        constructor constructor/BMZInferenceGUI/

    - name: Upload Windows artifacts
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.app }}-windows-installer
        path: "*.exe"

    - name: Upload macOS artifacts
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.app }}-macos-installer
        path: "*MacOSX*.sh"

    - name: Upload Linux artifacts
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.app }}-linux-installer
        path: "*.sh"

    - name: List build artifacts
      shell: bash -l {0}
      run: |
        echo "Built installers:"
        ls -la *.exe *.pkg *.sh 2>/dev/null || echo "No installers found in current directory"